server.port=${PORT:2027}


#h2 config
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

#postgresql config
#spring.datasource.url=jdbc:postgresql://localhost:5432/dbschool
#spring.datasource.username=postgres
#spring.datasource.password=${MYDBPASSWORD:pazzword}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.datasource.url=${SPRING_DATA_URL:jdbc:postgresql://ec2-54-163-226-238.compute-1.amazonaws.com:5432/d2eo52louc7482?user=lyfstzmtfnrzdt&password=f374d1b0944dccac7eadf6abdfefcf5868837f443dd69a5a6cd0e8e657cdf315&sslmode=require}
spring.datasource.username=lyfstzmtfnrzdt
spring.datasource.password=${MYDBPASSWORD:f374d1b0944dccac7eadf6abdfefcf5868837f443dd69a5a6cd0e8e657cdf315}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true



#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=none

#data.sql never/always
spring.datasource.initialization-mode=never

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.fail-on-empty-beans=false

server.error.whitelabel.enabled=false

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
